{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "831ef1db-e855-4520-9243-e580a30f2715",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from datetime import datetime"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "de521f03-9bad-4aea-b6e0-d45322d0f39d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    Financial Year          Asset Code        Purchase date  Sl   Bill no  \\\n",
      "0        2017-2018  FRC-HQ-OE-2017-001  2017-12-09 00:00:00    1       12   \n",
      "1        2017-2018  FRC-HQ-OE-2017-002  2017-12-09 00:00:00    2       12   \n",
      "2        2017-2018  FRC-HQ-OE-2017-003  2017-12-09 00:00:00    3       12   \n",
      "3        2017-2018  FRC-HQ-OE-2017-004  2017-12-09 00:00:00    4       12   \n",
      "4        2017-2018  FRC-HQ-OE-2017-005  2017-12-09 00:00:00    5       12   \n",
      "..             ...                 ...                  ...  ...      ...   \n",
      "295      2021-2022  FRC-HQ-FL-2022-297           30/06/2022  297      272   \n",
      "296      2021-2022  FRC-HQ-FL-2022-298           30/06/2022  298      272   \n",
      "297      2021-2022  FRC-HQ-FL-2022-299           30/06/2022  299      272   \n",
      "298      2021-2022  FRC-HQ-FL-2022-300           30/06/2022  300      272   \n",
      "299      2021-2022  FRC-HQ-FL-2022-301           30/06/2022  301      272   \n",
      "\n",
      "     Economic Code               Category  \\\n",
      "0        4112310.0       Office equipment   \n",
      "1        4112310.0       Office equipment   \n",
      "2        4112310.0       Office equipment   \n",
      "3        4112310.0       Office equipment   \n",
      "4        4112310.0       Office equipment   \n",
      "..             ...                    ...   \n",
      "295            NaN  Furniture (Leasehold)   \n",
      "296            NaN  Furniture (Leasehold)   \n",
      "297            NaN  Furniture (Leasehold)   \n",
      "298            NaN  Furniture (Leasehold)   \n",
      "299            NaN  Furniture (Leasehold)   \n",
      "\n",
      "                              Name of Item   Brand Name   Model/Type  ...  \\\n",
      "0                              Fixed Chair  Rubel/Local  AFL-CRV-122  ...   \n",
      "1                          Sider Extension  Rubel/Local  AFL-OSX-203  ...   \n",
      "2                          Executive Table  Rubel/Local  AFL-OTE-103  ...   \n",
      "3                              Drawer Unit  Rubel/Local  AFL-CXD-201  ...   \n",
      "4                             Swivel Chair  Rubel/Local  AFL-CRS-104  ...   \n",
      "..                                     ...          ...          ...  ...   \n",
      "295                      ED Visitor Chair           NaN          NaN  ...   \n",
      "296                        Director Chair           NaN          NaN  ...   \n",
      "297        IT,Accounts,Head of Admin Chair          NaN          NaN  ...   \n",
      "298  Executive Director Double Seater Sofa          NaN          NaN  ...   \n",
      "299                    Open Collaboration           NaN          NaN  ...   \n",
      "\n",
      "    Cost of Assets Sold  Current Balance  Accumulated Depreciation 2017-2018  \\\n",
      "0               28431.0          28431.0                         0         0   \n",
      "1                   0.0          22253.0                         0         0   \n",
      "2                   0.0          10810.0                         0         0   \n",
      "3                   0.0          21481.0                         0         0   \n",
      "4                   0.0          11653.0                         0         0   \n",
      "..                  ...              ...                       ...       ...   \n",
      "295                 0.0         120000.0                         0         0   \n",
      "296                 0.0          78800.0                         0         0   \n",
      "297                 0.0          50100.0                         0         0   \n",
      "298                 0.0         188000.0                         0         0   \n",
      "299                 0.0          45500.0                         0         0   \n",
      "\n",
      "     2018-2019  2019-2020  2020-2021  2021-2022  2022-2023  2023-2024  \n",
      "0            0          0          0          0          0          0  \n",
      "1            0          0          0          0          0          0  \n",
      "2            0          0          0          0          0          0  \n",
      "3            0          0          0          0          0          0  \n",
      "4            0          0          0          0          0          0  \n",
      "..         ...        ...        ...        ...        ...        ...  \n",
      "295          0          0          0          0          0          0  \n",
      "296          0          0          0          0          0          0  \n",
      "297          0          0          0          0          0          0  \n",
      "298          0          0          0          0          0          0  \n",
      "299          0          0          0          0          0          0  \n",
      "\n",
      "[300 rows x 24 columns]\n"
     ]
    }
   ],
   "source": [
    "file_path ='asset_register.xlsx'\n",
    "\n",
    "df = pd.read_excel(file_path)\n",
    "df=df[['Financial Year','Asset Code','Purchase date','Sl ','Bill no','Economic Code','Category','Name of Item','Brand Name','Model/Type','Units','Modified Number','Price','Sold (unit)','Cost of Assets Sold','Current Balance']]\n",
    "df['Accumulated Depreciation']=0\n",
    "df[['Cost of Assets Sold']]=df[['Cost of Assets Sold']].fillna(0)\n",
    "df['Current Balance']=df['Price']-df['Cost of Assets Sold']\n",
    "years=df['Financial Year'].drop_duplicates()\n",
    "current_year=datetime.now()\n",
    "# print(current_year.year)\n",
    "year={}\n",
    "#getting year Values as a list to iterate\n",
    "for i in years:\n",
    "    d=i.split('-')\n",
    "    year[f'{i}']=int(d[1])\n",
    "val=year.values()\n",
    "years=[]\n",
    "for i in val:\n",
    "    years.append(i)\n",
    "years.sort()\n",
    "# find out the numbers of years to add\n",
    "columns_to_create=current_year.year-int(years[0])\n",
    "#check whether any new year-based column is to be added\n",
    "if len(years)<columns_to_create:\n",
    "    # print(columns_to_create)\n",
    "    years_new=[]\n",
    "    for i in range(columns_to_create+1):\n",
    "        p=int(years[0])+i\n",
    "        years_new.append(p)\n",
    "    # years_new.append(list[i])\n",
    "    years_dict={}\n",
    "    for i in years_new:\n",
    "        years_dict[f'{int(i)-1}-{i}']=int(i)\n",
    "    for i in years_dict.keys():\n",
    "        df[i]=0\n",
    "    columns_to_add=int(columns_to_create)\n",
    "else:\n",
    "    #if no more year based columns to be added\n",
    "    for i in years:\n",
    "        df[i]=0\n",
    "    colums_to_add=len(years)\n",
    "#Write it to excel file\n",
    "df.to_excel(\"depreciation.xlsx\",index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "a23ae8e7-69ad-4987-bf2e-50f9c960d2c6",
   "metadata": {},
   "outputs": [],
   "source": [
    "df=df[['Financial Year','Asset Code','Purchase date','Sl ','Bill no','Economic Code','Category','Name of Item','Brand Name','Model/Type','Units','Modified Number','Price','Sold (unit)','Cost of Assets Sold','Current Balance']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "46a7a9e5-b2de-4448-a5ff-03424126013f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "977c5bfa-386d-402b-a80e-4fa3e397dfb9",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "15faa3db-2469-4e06-bdd7-43a148fdc65f",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
